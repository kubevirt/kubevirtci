apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kube-proxy
    app.kubernetes.io/instance: kube-proxy
automountServiceAccountToken: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kube-proxy
    app.kubernetes.io/instance: kube-proxy
data:
  config: |-
    apiVersion: kubeproxy.config.k8s.io/v1alpha1
    bindAddress: 0.0.0.0
    bindAddressHardFail: false
    clientConnection:
      acceptContentTypes: ""
      burst: 0
      contentType: ""
      kubeconfig: /var/lib/kube-proxy/kubeconfig.conf
      qps: 0
    clusterCIDR: 10.244.0.0/16,fd10:244::/112
    configSyncPeriod: 0s
    conntrack:
      maxPerCore: null
      min: null
      tcpBeLiberal: false
      tcpCloseWaitTimeout: null
      tcpEstablishedTimeout: null
      udpStreamTimeout: 0s
      udpTimeout: 0s
    detectLocal:
      bridgeInterface: ""
      interfaceNamePrefix: ""
    detectLocalMode: ""
    enableProfiling: false
    healthzBindAddress: ""
    hostnameOverride: ""
    iptables:
      localhostNodePorts: null
      masqueradeAll: false
      masqueradeBit: null
      minSyncPeriod: 0s
      syncPeriod: 0s
    ipvs:
      excludeCIDRs: null
      minSyncPeriod: 0s
      scheduler: ""
      strictARP: false
      syncPeriod: 0s
      tcpFinTimeout: 0s
      tcpTimeout: 0s
      udpTimeout: 0s
    kind: KubeProxyConfiguration
    logging:
      flushFrequency: 0
      options:
        json:
          infoBufferSize: "0"
      verbosity: 0
    metricsBindAddress: ""
    mode: iptables
    nftables:
      masqueradeAll: false
      masqueradeBit: null
      minSyncPeriod: 0s
      syncPeriod: 0s
    nodePortAddresses: null
    oomScoreAdj: null
    portRange: ""
    showHiddenMetricsForVersion: ""
    winkernel:
      enableDSR: false
      forwardHealthCheckVip: false
      networkName: ""
      rootHnsEndpointName: ""
      sourceVip: ""
  kubeconfig: |-
    kind: Config
    apiVersion: v1
    clusters:
      - cluster:
          certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          server: https://192.168.66.110:6443
        name: default
    contexts:
      - context:
          cluster: default
          namespace: default
          user: default
        name: default
    current-context: default
    users:
      - name: default
        user:
          tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-proxy
  labels:
    app.kubernetes.io/name: kube-proxy
    app.kubernetes.io/instance: kube-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node-proxier
subjects:
  - kind: ServiceAccount
    name: kube-proxy
    namespace: default
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: kube-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kube-proxy
    app.kubernetes.io/instance: kube-proxy
spec:
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 10%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-proxy
      app.kubernetes.io/instance: kube-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-proxy
        app.kubernetes.io/instance: kube-proxy
      annotations:
        checksum/config: 56973c65a78d5adeeaa448c828c1e8aeb3b5663add4ba782e87c6605f33b3e47
    spec:
      serviceAccountName: kube-proxy
      securityContext:
        runAsNonRoot: false
      priorityClassName: "system-node-critical"
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirst
      containers:
        - name: kube-proxy
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_RESOURCE
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          image: registry.k8s.io/kube-proxy:v1.28.0
          imagePullPolicy: IfNotPresent
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          command:
            - kube-proxy
            - --v=2
            - --config=/var/lib/kube-proxy/config
            - --hostname-override=$(NODE_NAME)
          ports:
            - name: http-health
              containerPort: 10256
              protocol: TCP
            - name: http-metrics
              containerPort: 10249
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /livez
              port: http-health
          readinessProbe:
            httpGet:
              path: /healthz
              port: http-health
          volumeMounts:
            - mountPath: /var/lib/kube-proxy/
              name: config
              readOnly: true
            - mountPath: /var/log
              name: varlog
              readOnly: false
            - mountPath: /run/xtables.lock
              name: xtables-lock
              readOnly: false
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: kube-proxy
        - name: varlog
          hostPath:
            path: /var/log
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
        - name: lib-modules
          hostPath:
            path: /lib/modules
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists